import React, { useState } from 'react';
import { Button } from '@/components/ui/button';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Alert, AlertTitle, AlertDescription } from '@/components/ui/alert';
import { useToast } from '@/components/ToastContainer';
import ConfirmDialog from '@/components/ConfirmDialog';
import { Sparkles, Zap, Heart, Gift } from 'lucide-react';

export default function AlertShowcase() {
  const { showSuccess, showError, showWarning, showInfo } = useToast();
  const [showConfirm, setShowConfirm] = useState(false);
  const [confirmType, setConfirmType] = useState<'default' | 'destructive' | 'success' | 'warning'>('default');

  const handleToastDemo = (type: string) => {
    switch (type) {
      case 'success':
        showSuccess(
          "Th√†nh c√¥ng r·ªìi! üéâ", 
          "File c·ªßa b·∫°n ƒë√£ ƒë∆∞·ª£c t·∫£i l√™n th√†nh c√¥ng v√† s·∫µn s√†ng ƒë·ªÉ chia s·∫ª."
        );
        break;
      case 'error':
        showError(
          "C√≥ l·ªói x·∫£y ra", 
          "Kh√¥ng th·ªÉ t·∫£i file l√™n. Vui l√≤ng ki·ªÉm tra k·∫øt n·ªëi m·∫°ng v√† th·ª≠ l·∫°i."
        );
        break;
      case 'warning':
        showWarning(
          "C·∫£nh b√°o dung l∆∞·ª£ng", 
          "B·∫°n ƒë√£ s·ª≠ d·ª•ng 85% dung l∆∞·ª£ng. H√£y x√≥a m·ªôt s·ªë file kh√¥ng c·∫ßn thi·∫øt."
        );
        break;
      case 'info':
        showInfo(
          "Th√¥ng tin m·ªõi", 
          "SpaceBSA v·ª´a ƒë∆∞·ª£c c·∫≠p nh·∫≠t v·ªõi nhi·ªÅu t√≠nh nƒÉng m·ªõi. Kh√°m ph√° ngay!"
        );
        break;
    }
  };

  const openConfirmDialog = (type: 'default' | 'destructive' | 'success' | 'warning') => {
    setConfirmType(type);
    setShowConfirm(true);
  };

  return (
    <div className="space-y-8 p-6">
      <div className="text-center mb-8">
        <h1 className="text-3xl font-bold bg-gradient-to-r from-blue-600 to-purple-600 bg-clip-text text-transparent mb-2">
          H·ªá th·ªëng Alert ƒë·∫πp m·∫Øt
        </h1>
        <p className="text-gray-600 text-lg">
          Demo c√°c lo·∫°i th√¥ng b√°o v√† c·∫£nh b√°o v·ªõi hi·ªáu ·ª©ng ƒë·∫πp
        </p>
      </div>

      {/* Toast Notifications */}
      <Card>
        <CardHeader>
          <CardTitle className="flex items-center space-x-2">
            <Sparkles className="h-5 w-5 text-blue-500" />
            <span>Toast Notifications</span>
          </CardTitle>
        </CardHeader>
        <CardContent>
          <div className="grid grid-cols-2 md:grid-cols-4 gap-4">
            <Button
              onClick={() => handleToastDemo('success')}
              className="bg-green-500 hover:bg-green-600 text-white"
            >
              Th√†nh c√¥ng
            </Button>
            <Button
              onClick={() => handleToastDemo('error')}
              className="bg-red-500 hover:bg-red-600 text-white"
            >
              L·ªói
            </Button>
            <Button
              onClick={() => handleToastDemo('warning')}
              className="bg-yellow-500 hover:bg-yellow-600 text-white"
            >
              C·∫£nh b√°o
            </Button>
            <Button
              onClick={() => handleToastDemo('info')}
              className="bg-blue-500 hover:bg-blue-600 text-white"
            >
              Th√¥ng tin
            </Button>
          </div>
        </CardContent>
      </Card>

      {/* Inline Alerts */}
      <Card>
        <CardHeader>
          <CardTitle className="flex items-center space-x-2">
            <Zap className="h-5 w-5 text-yellow-500" />
            <span>Inline Alerts</span>
          </CardTitle>
        </CardHeader>
        <CardContent className="space-y-4">
          <Alert variant="success" dismissible>
            <AlertTitle>T·∫£i file th√†nh c√¥ng!</AlertTitle>
            <AlertDescription>
              H√¨nh ·∫£nh "vacation-photo.jpg" ƒë√£ ƒë∆∞·ª£c t·∫£i l√™n th√†nh c√¥ng v√† c√≥ th·ªÉ chia s·∫ª ngay.
            </AlertDescription>
          </Alert>

          <Alert variant="destructive" dismissible>
            <AlertTitle>Kh√¥ng th·ªÉ x√≥a file</AlertTitle>
            <AlertDescription>
              File n√†y ƒëang ƒë∆∞·ª£c chia s·∫ª v·ªõi ng∆∞·ªùi kh√°c. Vui l√≤ng h·ªßy chia s·∫ª tr∆∞·ªõc khi x√≥a.
            </AlertDescription>
          </Alert>

          <Alert variant="warning" dismissible>
            <AlertTitle>Dung l∆∞·ª£ng s·∫Øp h·∫øt</AlertTitle>
            <AlertDescription>
              B·∫°n ƒë√£ s·ª≠ d·ª•ng 90% dung l∆∞·ª£ng (9GB/10GB). H√£y d·ªçn d·∫πp ƒë·ªÉ tr√°nh gi√°n ƒëo·∫°n d·ªãch v·ª•.
            </AlertDescription>
          </Alert>

          <Alert variant="info" dismissible>
            <AlertTitle>T√≠nh nƒÉng m·ªõi c√≥ s·∫µn</AlertTitle>
            <AlertDescription>
              Gi·ªù b·∫°n c√≥ th·ªÉ t·∫°o folder ƒë·ªÉ t·ªï ch·ª©c file t·ªët h∆°n. Th·ª≠ ngay t√≠nh nƒÉng n√†y!
            </AlertDescription>
          </Alert>
        </CardContent>
      </Card>

      {/* Confirm Dialogs */}
      <Card>
        <CardHeader>
          <CardTitle className="flex items-center space-x-2">
            <Heart className="h-5 w-5 text-pink-500" />
            <span>Confirm Dialogs</span>
          </CardTitle>
        </CardHeader>
        <CardContent>
          <div className="grid grid-cols-2 md:grid-cols-4 gap-4">
            <Button
              variant="outline"
              onClick={() => openConfirmDialog('default')}
            >
              M·∫∑c ƒë·ªãnh
            </Button>
            <Button
              variant="outline"
              onClick={() => openConfirmDialog('destructive')}
              className="border-red-200 text-red-700 hover:bg-red-50"
            >
              X√≥a file
            </Button>
            <Button
              variant="outline"
              onClick={() => openConfirmDialog('success')}
              className="border-green-200 text-green-700 hover:bg-green-50"
            >
              Ho√†n th√†nh
            </Button>
            <Button
              variant="outline"
              onClick={() => openConfirmDialog('warning')}
              className="border-yellow-200 text-yellow-700 hover:bg-yellow-50"
            >
              C·∫£nh b√°o
            </Button>
          </div>
        </CardContent>
      </Card>

      {/* Animated Demo */}
      <Card>
        <CardHeader>
          <CardTitle className="flex items-center space-x-2">
            <Gift className="h-5 w-5 text-purple-500" />
            <span>T·ªïng h·ª£p hi·ªáu ·ª©ng</span>
          </CardTitle>
        </CardHeader>
        <CardContent>
          <Button
            onClick={() => {
              // Show multiple notifications in sequence
              setTimeout(() => showInfo("B·∫Øt ƒë·∫ßu qu√° tr√¨nh...", "ƒêang chu·∫©n b·ªã t·∫£i file l√™n"), 100);
              setTimeout(() => showWarning("ƒêang x·ª≠ l√Ω...", "Vui l√≤ng ƒë·ª£i trong gi√¢y l√°t"), 1500);
              setTimeout(() => showSuccess("Ho√†n t·∫•t!", "T·∫•t c·∫£ file ƒë√£ ƒë∆∞·ª£c x·ª≠ l√Ω th√†nh c√¥ng"), 3000);
            }}
            className="w-full bg-gradient-to-r from-purple-500 to-pink-500 hover:from-purple-600 hover:to-pink-600 text-white font-semibold py-3"
          >
            Demo chu·ªói th√¥ng b√°o üé≠
          </Button>
        </CardContent>
      </Card>

      {/* Confirm Dialog */}
      <ConfirmDialog
        isOpen={showConfirm}
        onClose={() => setShowConfirm(false)}
        onConfirm={() => {
          showSuccess("ƒê√£ x√°c nh·∫≠n!", "H√†nh ƒë·ªông ƒë√£ ƒë∆∞·ª£c th·ª±c hi·ªán th√†nh c√¥ng.");
        }}
        title={
          confirmType === 'destructive' ? "X√≥a file vƒ©nh vi·ªÖn?" :
          confirmType === 'success' ? "Ho√†n th√†nh t√°c v·ª•?" :
          confirmType === 'warning' ? "C·∫£nh b√°o quan tr·ªçng" :
          "X√°c nh·∫≠n h√†nh ƒë·ªông"
        }
        description={
          confirmType === 'destructive' ? "File n√†y s·∫Ω b·ªã x√≥a vƒ©nh vi·ªÖn v√† kh√¥ng th·ªÉ kh√¥i ph·ª•c. B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën ti·∫øp t·ª•c?" :
          confirmType === 'success' ? "B·∫°n ƒë√£ ho√†n th√†nh t√°c v·ª• n√†y. Ti·∫øp t·ª•c ƒë·ªÉ l∆∞u thay ƒë·ªïi." :
          confirmType === 'warning' ? "H√†nh ƒë·ªông n√†y c√≥ th·ªÉ ·∫£nh h∆∞·ªüng ƒë·∫øn d·ªØ li·ªáu c·ªßa b·∫°n. Vui l√≤ng c√¢n nh·∫Øc k·ªπ tr∆∞·ªõc khi quy·∫øt ƒë·ªãnh." :
          "B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën th·ª±c hi·ªán h√†nh ƒë·ªông n√†y kh√¥ng?"
        }
        variant={confirmType}
        icon={
          confirmType === 'destructive' ? 'delete' :
          confirmType === 'success' ? 'success' :
          confirmType === 'warning' ? 'warning' :
          'info'
        }
        confirmText={
          confirmType === 'destructive' ? "X√≥a vƒ©nh vi·ªÖn" :
          confirmType === 'success' ? "Ho√†n th√†nh" :
          "X√°c nh·∫≠n"
        }
      />
    </div>
  );
}